openapi: 3.0.3
info:
  title: Twitter Process API
  version: '1.0'
  description: 'Generated Open API:

    * openApi.yml: Documentation of the Processes.

    WARNING: This is an experimental way and not approved.


    This example demonstrates how you can use a BPMN process and the Tweeter API to
    build a simple Twitter client.


    >This is the [original README](https://github.com/camunda/camunda-bpm-examples/tree/master/spring-boot-starter/example-twitter)

    '
servers:
- url: http://localhost:8887/engine-rest
paths:
  /process-definition/key/{key}/start:
    post:
      tags:
      - TwitterDemoProcess
      summary: 'StartProcessInstance: TwitterDemoProcess'
      description: 'This runs the Twitter Approvement Process.

        '
      operationId: 'StartProcessInstance: TwitterDemoProcess'
      parameters:
      - name: key
        in: path
        description: The processDefinitionKey of the Process
        required: true
        schema:
          type: string
        example: TwitterDemoProcess
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartProcessIn_In'
            examples:
              standard:
                value:
                  variables:
                    email:
                      value: me@myself.com
                      type: String
                    content:
                      value: Test Tweet
                      type: String
                  withVariablesInReturn: true
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartProcessOut_Out'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CamundaError'
              examples:
                standardExample:
                  value:
                    type: BadRequest
                    message: The instance could not be created due to an invalid variable
                      value, for example if the value could not be parsed to an Integer
                      value or the passed variable type is not supported. See the
                      [Introduction](https://docs.camunda.org/manual/7.15/reference/rest/overview/#error-handling)
                      for the error response format.
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CamundaError'
              examples:
                standardExample:
                  value:
                    type: NotFound
                    message: The instance could not be created due to a non existing
                      process definition key. See the [Introduction](https://docs.camunda.org/manual/7.15/reference/rest/overview/#error-handling)
                      for the error response format.
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CamundaError'
              examples:
                standardExample:
                  value:
                    type: InternalServerError
                    message: The instance could not be created successfully. See the
                      [Introduction](https://docs.camunda.org/manual/7.15/reference/rest/overview/#error-handling)
                      for the error response format.
  /task/key/{taskId}/complete:
    post:
      tags:
      - Review Task Complete
      summary: 'CompleteTask: Review Task Complete'
      description: ''
      operationId: 'CompleteTask: Review Task Complete'
      parameters:
      - name: taskId
        in: path
        description: The taskId of the Form to complete.
        required: true
        schema:
          type: string
        example: '{{taskId}}'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTaskIn_In'
            examples:
              Tweet accepted:
                value:
                  variables:
                    approved:
                      value: true
                      type: Boolean
                  withVariablesInReturn: true
              Tweet rejected:
                value:
                  variables:
                    approved:
                      value: false
                      type: Boolean
                  withVariablesInReturn: true
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteTaskOut_Out'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CamundaError'
              examples:
                standardExample:
                  value:
                    type: BadRequest
                    message: The instance could not be created due to an invalid variable
                      value, for example if the value could not be parsed to an Integer
                      value or the passed variable type is not supported. See the
                      [Introduction](https://docs.camunda.org/manual/7.15/reference/rest/overview/#error-handling)
                      for the error response format.
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CamundaError'
              examples:
                standardExample:
                  value:
                    type: InternalServerError
                    message: The instance could not be created successfully. See the
                      [Introduction](https://docs.camunda.org/manual/7.15/reference/rest/overview/#error-handling)
                      for the error response format.
components:
  schemas:
    CBoolean:
      required:
      - value
      - type
      type: object
      properties:
        value:
          type: boolean
        type:
          type: string
      description: If true, the Boss accepted the Tweet
    CString:
      required:
      - value
      - type
      type: object
      properties:
        value:
          type: string
        type:
          type: string
    CamundaError:
      required:
      - type
      - message
      type: object
      properties:
        type:
          type: string
        message:
          type: string
    CompleteTaskIn_In:
      required:
      - variables
      - withVariablesInReturn
      type: object
      properties:
        variables:
          $ref: '#/components/schemas/ReviewTweet'
        withVariablesInReturn:
          type: boolean
          description: Set to false will not return the Process Variables and the
            Result Status is 204.
      description: 'A JSON object with the following properties: (at least an empty
        JSON object {} or an empty request body)'
    CompleteTaskOut_Out:
      required:
      - variables
      type: object
      properties:
        variables:
          $ref: '#/components/schemas/NoOutput'
      description: A JSON object representing the newly created process instance.
    CreateTweet:
      required:
      - email
      - content
      type: object
      properties:
        email:
          $ref: '#/components/schemas/CString'
        content:
          $ref: '#/components/schemas/CString'
      description: 'Every employee may create a Tweet.


        - email:   The email address of the creator.

        - content: The content of the Tweet.

        '
    NoOutput:
      type: object
      description: The Process Variables - Be aware that returns everything stored
        in the Process.
    ReviewTweet:
      required:
      - approved
      type: object
      properties:
        approved:
          $ref: '#/components/schemas/CBoolean'
      description: Every Tweet has to be accepted by the Boss.
    StartProcessIn_In:
      required:
      - variables
      - withVariablesInReturn
      type: object
      properties:
        variables:
          $ref: '#/components/schemas/CreateTweet'
        businessKey:
          type: string
          description: The business key of the process instance.
        withVariablesInReturn:
          type: boolean
          description: Set to false will not return the Process Variables.
      description: 'A JSON object with the following properties: (at least an empty
        JSON object {} or an empty request body)'
    StartProcessOut_Out:
      required:
      - variables
      - id
      - definitionId
      type: object
      properties:
        variables:
          $ref: '#/components/schemas/NoOutput'
        id:
          type: string
          description: The id of the process instance.
        definitionId:
          type: string
          description: The id of the process definition.
        businessKey:
          type: string
          description: The business key of the process instance.
      description: A JSON object representing the newly created process instance.
